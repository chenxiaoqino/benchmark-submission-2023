(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
Generated by: Xiaoqi Chen
Generated on: 2022-12-14
Generator: P4DFA
Application: Synthesize an isomorphic mapping for executing state machine transitions using hardware arithmetic circuits in programmable switches.
Target Solver: z3
Publications: Synthesizing State Machines for Data Planes (SOSR2022, doi:10.1145/3563647.3563650)
Input DFA: Mobile device state
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)


(declare-fun pred_const_0_0 () (_ BitVec 8))
(declare-fun pred_const_0_1 () (_ BitVec 8))
(declare-fun arith_sym_const_0_0 () (_ BitVec 8))
(declare-fun arith_state_const_0_0 () (_ BitVec 8))
(declare-fun arith_sym_const_0_1 () (_ BitVec 8))
(declare-fun arith_state_const_0_1 () (_ BitVec 8))
(declare-fun state_1_is_main_0 () Bool)
(declare-fun state_1_poweredOff_0 () (_ BitVec 8))
(declare-fun state_1_error_0 () (_ BitVec 8))
(declare-fun state_1_idle_0 () (_ BitVec 8))
(declare-fun state_1_roamedOut_0 () (_ BitVec 8))
(declare-fun state_1_associated_0 () (_ BitVec 8))
(declare-fun pred_state_opt_0_0_0 () Bool)
(declare-fun sym_2_roamOut () (_ BitVec 8))
(declare-fun sym_1_roamOut () (_ BitVec 8))
(declare-fun pred_sym_opt_0_0_1 () Bool)
(declare-fun pred_sym_opt_0_0_0 () Bool)
(declare-fun pred_op_0_0_1 () Bool)
(declare-fun pred_op_0_0_0 () Bool)
(declare-fun pred_val_0_0_associated_0_roamOut_roamedOut () Bool)
(declare-fun pred_state_opt_0_1_0 () Bool)
(declare-fun pred_sym_opt_0_1_1 () Bool)
(declare-fun pred_sym_opt_0_1_0 () Bool)
(declare-fun pred_op_0_1_1 () Bool)
(declare-fun pred_op_0_1_0 () Bool)
(declare-fun pred_val_0_1_associated_0_roamOut_roamedOut () Bool)
(declare-fun logic_op_0_0_1 () Bool)
(declare-fun logic_op_0_0_0 () Bool)
(declare-fun logic_val_0_0_associated_0_roamOut_roamedOut () Bool)
(declare-fun arith_state_opt_0_0_0 () Bool)
(declare-fun arith_sym_opt_0_0_1 () Bool)
(declare-fun arith_sym_opt_0_0_0 () Bool)
(declare-fun arith_val_0_0_associated_0_roamOut_roamedOut () (_ BitVec 8))
(declare-fun arith_state_opt_0_1_0 () Bool)
(declare-fun arith_sym_opt_0_1_1 () Bool)
(declare-fun arith_sym_opt_0_1_0 () Bool)
(declare-fun arith_val_0_1_associated_0_roamOut_roamedOut () (_ BitVec 8))
(declare-fun sym_2_roamIn () (_ BitVec 8))
(declare-fun sym_1_roamIn () (_ BitVec 8))
(declare-fun pred_val_0_0_associated_0_roamIn_error () Bool)
(declare-fun pred_val_0_1_associated_0_roamIn_error () Bool)
(declare-fun logic_val_0_0_associated_0_roamIn_error () Bool)
(declare-fun arith_val_0_0_associated_0_roamIn_error () (_ BitVec 8))
(declare-fun arith_val_0_1_associated_0_roamIn_error () (_ BitVec 8))
(declare-fun sym_2_powerOff () (_ BitVec 8))
(declare-fun sym_1_powerOff () (_ BitVec 8))
(declare-fun pred_val_0_0_associated_0_powerOff_poweredOff () Bool)
(declare-fun pred_val_0_1_associated_0_powerOff_poweredOff () Bool)
(declare-fun logic_val_0_0_associated_0_powerOff_poweredOff () Bool)
(declare-fun arith_val_0_0_associated_0_powerOff_poweredOff () (_ BitVec 8))
(declare-fun arith_val_0_1_associated_0_powerOff_poweredOff () (_ BitVec 8))
(declare-fun sym_2_initialize () (_ BitVec 8))
(declare-fun sym_1_initialize () (_ BitVec 8))
(declare-fun pred_val_0_0_associated_0_initialize_error () Bool)
(declare-fun pred_val_0_1_associated_0_initialize_error () Bool)
(declare-fun logic_val_0_0_associated_0_initialize_error () Bool)
(declare-fun arith_val_0_0_associated_0_initialize_error () (_ BitVec 8))
(declare-fun arith_val_0_1_associated_0_initialize_error () (_ BitVec 8))
(declare-fun sym_2_wakeUp () (_ BitVec 8))
(declare-fun sym_1_wakeUp () (_ BitVec 8))
(declare-fun pred_val_0_0_associated_0_wakeUp_error () Bool)
(declare-fun pred_val_0_1_associated_0_wakeUp_error () Bool)
(declare-fun logic_val_0_0_associated_0_wakeUp_error () Bool)
(declare-fun arith_val_0_0_associated_0_wakeUp_error () (_ BitVec 8))
(declare-fun arith_val_0_1_associated_0_wakeUp_error () (_ BitVec 8))
(declare-fun sym_2_sleep () (_ BitVec 8))
(declare-fun sym_1_sleep () (_ BitVec 8))
(declare-fun pred_val_0_0_associated_0_sleep_idle () Bool)
(declare-fun pred_val_0_1_associated_0_sleep_idle () Bool)
(declare-fun logic_val_0_0_associated_0_sleep_idle () Bool)
(declare-fun arith_val_0_0_associated_0_sleep_idle () (_ BitVec 8))
(declare-fun arith_val_0_1_associated_0_sleep_idle () (_ BitVec 8))
(declare-fun pred_val_0_0_roamedOut_0_roamOut_error () Bool)
(declare-fun pred_val_0_1_roamedOut_0_roamOut_error () Bool)
(declare-fun logic_val_0_0_roamedOut_0_roamOut_error () Bool)
(declare-fun arith_val_0_0_roamedOut_0_roamOut_error () (_ BitVec 8))
(declare-fun arith_val_0_1_roamedOut_0_roamOut_error () (_ BitVec 8))
(declare-fun pred_val_0_0_roamedOut_0_roamIn_associated () Bool)
(declare-fun pred_val_0_1_roamedOut_0_roamIn_associated () Bool)
(declare-fun logic_val_0_0_roamedOut_0_roamIn_associated () Bool)
(declare-fun arith_val_0_0_roamedOut_0_roamIn_associated () (_ BitVec 8))
(declare-fun arith_val_0_1_roamedOut_0_roamIn_associated () (_ BitVec 8))
(declare-fun pred_val_0_0_roamedOut_0_powerOff_error () Bool)
(declare-fun pred_val_0_1_roamedOut_0_powerOff_error () Bool)
(declare-fun logic_val_0_0_roamedOut_0_powerOff_error () Bool)
(declare-fun arith_val_0_0_roamedOut_0_powerOff_error () (_ BitVec 8))
(declare-fun arith_val_0_1_roamedOut_0_powerOff_error () (_ BitVec 8))
(declare-fun pred_val_0_0_roamedOut_0_initialize_error () Bool)
(declare-fun pred_val_0_1_roamedOut_0_initialize_error () Bool)
(declare-fun logic_val_0_0_roamedOut_0_initialize_error () Bool)
(declare-fun arith_val_0_0_roamedOut_0_initialize_error () (_ BitVec 8))
(declare-fun arith_val_0_1_roamedOut_0_initialize_error () (_ BitVec 8))
(declare-fun pred_val_0_0_roamedOut_0_wakeUp_error () Bool)
(declare-fun pred_val_0_1_roamedOut_0_wakeUp_error () Bool)
(declare-fun logic_val_0_0_roamedOut_0_wakeUp_error () Bool)
(declare-fun arith_val_0_0_roamedOut_0_wakeUp_error () (_ BitVec 8))
(declare-fun arith_val_0_1_roamedOut_0_wakeUp_error () (_ BitVec 8))
(declare-fun pred_val_0_0_roamedOut_0_sleep_error () Bool)
(declare-fun pred_val_0_1_roamedOut_0_sleep_error () Bool)
(declare-fun logic_val_0_0_roamedOut_0_sleep_error () Bool)
(declare-fun arith_val_0_0_roamedOut_0_sleep_error () (_ BitVec 8))
(declare-fun arith_val_0_1_roamedOut_0_sleep_error () (_ BitVec 8))
(declare-fun pred_val_0_0_poweredOff_0_roamOut_error () Bool)
(declare-fun pred_val_0_1_poweredOff_0_roamOut_error () Bool)
(declare-fun logic_val_0_0_poweredOff_0_roamOut_error () Bool)
(declare-fun arith_val_0_0_poweredOff_0_roamOut_error () (_ BitVec 8))
(declare-fun arith_val_0_1_poweredOff_0_roamOut_error () (_ BitVec 8))
(declare-fun pred_val_0_0_poweredOff_0_roamIn_error () Bool)
(declare-fun pred_val_0_1_poweredOff_0_roamIn_error () Bool)
(declare-fun logic_val_0_0_poweredOff_0_roamIn_error () Bool)
(declare-fun arith_val_0_0_poweredOff_0_roamIn_error () (_ BitVec 8))
(declare-fun arith_val_0_1_poweredOff_0_roamIn_error () (_ BitVec 8))
(declare-fun pred_val_0_0_poweredOff_0_powerOff_error () Bool)
(declare-fun pred_val_0_1_poweredOff_0_powerOff_error () Bool)
(declare-fun logic_val_0_0_poweredOff_0_powerOff_error () Bool)
(declare-fun arith_val_0_0_poweredOff_0_powerOff_error () (_ BitVec 8))
(declare-fun arith_val_0_1_poweredOff_0_powerOff_error () (_ BitVec 8))
(declare-fun pred_val_0_0_poweredOff_0_initialize_associated () Bool)
(declare-fun pred_val_0_1_poweredOff_0_initialize_associated () Bool)
(declare-fun logic_val_0_0_poweredOff_0_initialize_associated () Bool)
(declare-fun arith_val_0_0_poweredOff_0_initialize_associated () (_ BitVec 8))
(declare-fun arith_val_0_1_poweredOff_0_initialize_associated () (_ BitVec 8))
(declare-fun pred_val_0_0_poweredOff_0_wakeUp_error () Bool)
(declare-fun pred_val_0_1_poweredOff_0_wakeUp_error () Bool)
(declare-fun logic_val_0_0_poweredOff_0_wakeUp_error () Bool)
(declare-fun arith_val_0_0_poweredOff_0_wakeUp_error () (_ BitVec 8))
(declare-fun arith_val_0_1_poweredOff_0_wakeUp_error () (_ BitVec 8))
(declare-fun pred_val_0_0_poweredOff_0_sleep_error () Bool)
(declare-fun pred_val_0_1_poweredOff_0_sleep_error () Bool)
(declare-fun logic_val_0_0_poweredOff_0_sleep_error () Bool)
(declare-fun arith_val_0_0_poweredOff_0_sleep_error () (_ BitVec 8))
(declare-fun arith_val_0_1_poweredOff_0_sleep_error () (_ BitVec 8))
(declare-fun pred_val_0_0_idle_0_roamOut_error () Bool)
(declare-fun pred_val_0_1_idle_0_roamOut_error () Bool)
(declare-fun logic_val_0_0_idle_0_roamOut_error () Bool)
(declare-fun arith_val_0_0_idle_0_roamOut_error () (_ BitVec 8))
(declare-fun arith_val_0_1_idle_0_roamOut_error () (_ BitVec 8))
(declare-fun pred_val_0_0_idle_0_roamIn_error () Bool)
(declare-fun pred_val_0_1_idle_0_roamIn_error () Bool)
(declare-fun logic_val_0_0_idle_0_roamIn_error () Bool)
(declare-fun arith_val_0_0_idle_0_roamIn_error () (_ BitVec 8))
(declare-fun arith_val_0_1_idle_0_roamIn_error () (_ BitVec 8))
(declare-fun pred_val_0_0_idle_0_powerOff_error () Bool)
(declare-fun pred_val_0_1_idle_0_powerOff_error () Bool)
(declare-fun logic_val_0_0_idle_0_powerOff_error () Bool)
(declare-fun arith_val_0_0_idle_0_powerOff_error () (_ BitVec 8))
(declare-fun arith_val_0_1_idle_0_powerOff_error () (_ BitVec 8))
(declare-fun pred_val_0_0_idle_0_initialize_error () Bool)
(declare-fun pred_val_0_1_idle_0_initialize_error () Bool)
(declare-fun logic_val_0_0_idle_0_initialize_error () Bool)
(declare-fun arith_val_0_0_idle_0_initialize_error () (_ BitVec 8))
(declare-fun arith_val_0_1_idle_0_initialize_error () (_ BitVec 8))
(declare-fun pred_val_0_0_idle_0_wakeUp_associated () Bool)
(declare-fun pred_val_0_1_idle_0_wakeUp_associated () Bool)
(declare-fun logic_val_0_0_idle_0_wakeUp_associated () Bool)
(declare-fun arith_val_0_0_idle_0_wakeUp_associated () (_ BitVec 8))
(declare-fun arith_val_0_1_idle_0_wakeUp_associated () (_ BitVec 8))
(declare-fun pred_val_0_0_idle_0_sleep_error () Bool)
(declare-fun pred_val_0_1_idle_0_sleep_error () Bool)
(declare-fun logic_val_0_0_idle_0_sleep_error () Bool)
(declare-fun arith_val_0_0_idle_0_sleep_error () (_ BitVec 8))
(declare-fun arith_val_0_1_idle_0_sleep_error () (_ BitVec 8))
(declare-fun pred_val_0_0_error_0_roamOut_error () Bool)
(declare-fun pred_val_0_1_error_0_roamOut_error () Bool)
(declare-fun logic_val_0_0_error_0_roamOut_error () Bool)
(declare-fun arith_val_0_0_error_0_roamOut_error () (_ BitVec 8))
(declare-fun arith_val_0_1_error_0_roamOut_error () (_ BitVec 8))
(declare-fun pred_val_0_0_error_0_roamIn_error () Bool)
(declare-fun pred_val_0_1_error_0_roamIn_error () Bool)
(declare-fun logic_val_0_0_error_0_roamIn_error () Bool)
(declare-fun arith_val_0_0_error_0_roamIn_error () (_ BitVec 8))
(declare-fun arith_val_0_1_error_0_roamIn_error () (_ BitVec 8))
(declare-fun pred_val_0_0_error_0_powerOff_error () Bool)
(declare-fun pred_val_0_1_error_0_powerOff_error () Bool)
(declare-fun logic_val_0_0_error_0_powerOff_error () Bool)
(declare-fun arith_val_0_0_error_0_powerOff_error () (_ BitVec 8))
(declare-fun arith_val_0_1_error_0_powerOff_error () (_ BitVec 8))
(declare-fun pred_val_0_0_error_0_initialize_associated () Bool)
(declare-fun pred_val_0_1_error_0_initialize_associated () Bool)
(declare-fun logic_val_0_0_error_0_initialize_associated () Bool)
(declare-fun arith_val_0_0_error_0_initialize_associated () (_ BitVec 8))
(declare-fun arith_val_0_1_error_0_initialize_associated () (_ BitVec 8))
(declare-fun pred_val_0_0_error_0_wakeUp_error () Bool)
(declare-fun pred_val_0_1_error_0_wakeUp_error () Bool)
(declare-fun logic_val_0_0_error_0_wakeUp_error () Bool)
(declare-fun arith_val_0_0_error_0_wakeUp_error () (_ BitVec 8))
(declare-fun arith_val_0_1_error_0_wakeUp_error () (_ BitVec 8))
(declare-fun pred_val_0_0_error_0_sleep_error () Bool)
(declare-fun pred_val_0_1_error_0_sleep_error () Bool)
(declare-fun logic_val_0_0_error_0_sleep_error () Bool)
(declare-fun arith_val_0_0_error_0_sleep_error () (_ BitVec 8))
(declare-fun arith_val_0_1_error_0_sleep_error () (_ BitVec 8))
(assert
 (bvsge pred_const_0_0 (_ bv0 8)))
(assert
 (bvsle pred_const_0_0 (_ bv7 8)))
(assert
 (bvsge pred_const_0_1 (_ bv0 8)))
(assert
 (bvsle pred_const_0_1 (_ bv7 8)))
(assert
 (bvsge arith_sym_const_0_0 (_ bv0 8)))
(assert
 (bvsle arith_sym_const_0_0 (_ bv7 8)))
(assert
 (bvsge arith_state_const_0_0 (_ bv0 8)))
(assert
 (bvsle arith_state_const_0_0 (_ bv7 8)))
(assert
 (bvsge arith_sym_const_0_1 (_ bv0 8)))
(assert
 (bvsle arith_sym_const_0_1 (_ bv7 8)))
(assert
 (bvsge arith_state_const_0_1 (_ bv0 8)))
(assert
 (bvsle arith_state_const_0_1 (_ bv7 8)))
(assert
 state_1_is_main_0)
(assert
 (= (_ bv0 8) state_1_poweredOff_0))
(assert
 (and (distinct state_1_error_0 state_1_poweredOff_0) true))
(assert
 (and (distinct state_1_error_0 state_1_idle_0) true))
(assert
 (and (distinct state_1_error_0 state_1_roamedOut_0) true))
(assert
 (and (distinct state_1_error_0 state_1_associated_0) true))
(assert
 (and (distinct state_1_poweredOff_0 state_1_idle_0) true))
(assert
 (and (distinct state_1_poweredOff_0 state_1_roamedOut_0) true))
(assert
 (and (distinct state_1_poweredOff_0 state_1_associated_0) true))
(assert
 (and (distinct state_1_idle_0 state_1_roamedOut_0) true))
(assert
 (and (distinct state_1_idle_0 state_1_associated_0) true))
(assert
 (and (distinct state_1_roamedOut_0 state_1_associated_0) true))
(assert
 (let ((?x61 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x59 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_roamOut sym_2_roamOut))))
 (let ((?x63 (bvadd (bvadd ?x59 ?x61) pred_const_0_0)))
 (let (($x72 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x63 (_ bv0 8)) (bvsge ?x63 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x63 (_ bv0 8)) (and (distinct ?x63 (_ bv0 8)) true)))))
 (= pred_val_0_0_associated_0_roamOut_roamedOut $x72))))))
(assert
 (let ((?x78 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x76 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_roamOut sym_2_roamOut))))
 (let ((?x80 (bvadd (bvadd ?x76 ?x78) pred_const_0_1)))
 (let (($x89 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x80 (_ bv0 8)) (bvsge ?x80 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x80 (_ bv0 8)) (and (distinct ?x80 (_ bv0 8)) true)))))
 (= pred_val_0_1_associated_0_roamOut_roamedOut $x89))))))
(assert
 (let (($x94 (or pred_val_0_0_associated_0_roamOut_roamedOut pred_val_0_1_associated_0_roamOut_roamedOut)))
 (let (($x93 (and pred_val_0_0_associated_0_roamOut_roamedOut pred_val_0_1_associated_0_roamOut_roamedOut)))
 (let (($x98 (ite logic_op_0_0_0 pred_val_0_0_associated_0_roamOut_roamedOut (ite logic_op_0_0_1 $x93 $x94))))
 (= logic_val_0_0_associated_0_roamOut_roamedOut $x98)))))
(assert
 (let ((?x107 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_associated_0)))
 (let ((?x105 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_roamOut sym_2_roamOut))))
 (= arith_val_0_0_associated_0_roamOut_roamedOut (bvadd ?x105 ?x107)))))
(assert
 (let ((?x113 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_associated_0)))
 (let ((?x110 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_roamOut sym_2_roamOut))))
 (= arith_val_0_1_associated_0_roamOut_roamedOut (bvadd ?x110 ?x113)))))
(assert
 (let ((?x129 (ite logic_val_0_0_associated_0_roamOut_roamedOut arith_val_0_0_associated_0_roamOut_roamedOut arith_val_0_1_associated_0_roamOut_roamedOut)))
 (= state_1_roamedOut_0 ?x129)))
(assert
 (let ((?x61 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x121 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_roamIn sym_2_roamIn))))
 (let ((?x124 (bvadd (bvadd ?x121 ?x61) pred_const_0_0)))
 (let (($x132 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x124 (_ bv0 8)) (bvsge ?x124 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x124 (_ bv0 8)) (and (distinct ?x124 (_ bv0 8)) true)))))
 (= pred_val_0_0_associated_0_roamIn_error $x132))))))
(assert
 (let ((?x78 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x134 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_roamIn sym_2_roamIn))))
 (let ((?x136 (bvadd (bvadd ?x134 ?x78) pred_const_0_1)))
 (let (($x143 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x136 (_ bv0 8)) (bvsge ?x136 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x136 (_ bv0 8)) (and (distinct ?x136 (_ bv0 8)) true)))))
 (= pred_val_0_1_associated_0_roamIn_error $x143))))))
(assert
 (let (($x148 (or pred_val_0_0_associated_0_roamIn_error pred_val_0_1_associated_0_roamIn_error)))
 (let (($x147 (and pred_val_0_0_associated_0_roamIn_error pred_val_0_1_associated_0_roamIn_error)))
 (let (($x150 (ite logic_op_0_0_0 pred_val_0_0_associated_0_roamIn_error (ite logic_op_0_0_1 $x147 $x148))))
 (= logic_val_0_0_associated_0_roamIn_error $x150)))))
(assert
 (let ((?x107 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_associated_0)))
 (let ((?x155 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_roamIn sym_2_roamIn))))
 (= arith_val_0_0_associated_0_roamIn_error (bvadd ?x155 ?x107)))))
(assert
 (let ((?x113 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_associated_0)))
 (let ((?x170 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_roamIn sym_2_roamIn))))
 (= arith_val_0_1_associated_0_roamIn_error (bvadd ?x170 ?x113)))))
(assert
 (let ((?x173 (ite logic_val_0_0_associated_0_roamIn_error arith_val_0_0_associated_0_roamIn_error arith_val_0_1_associated_0_roamIn_error)))
 (= state_1_error_0 ?x173)))
(assert
 (let ((?x61 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x165 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_powerOff sym_2_powerOff))))
 (let ((?x167 (bvadd (bvadd ?x165 ?x61) pred_const_0_0)))
 (let (($x176 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x167 (_ bv0 8)) (bvsge ?x167 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x167 (_ bv0 8)) (and (distinct ?x167 (_ bv0 8)) true)))))
 (= pred_val_0_0_associated_0_powerOff_poweredOff $x176))))))
(assert
 (let ((?x78 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x178 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_powerOff sym_2_powerOff))))
 (let ((?x180 (bvadd (bvadd ?x178 ?x78) pred_const_0_1)))
 (let (($x187 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x180 (_ bv0 8)) (bvsge ?x180 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x180 (_ bv0 8)) (and (distinct ?x180 (_ bv0 8)) true)))))
 (= pred_val_0_1_associated_0_powerOff_poweredOff $x187))))))
(assert
 (let (($x192 (or pred_val_0_0_associated_0_powerOff_poweredOff pred_val_0_1_associated_0_powerOff_poweredOff)))
 (let (($x191 (and pred_val_0_0_associated_0_powerOff_poweredOff pred_val_0_1_associated_0_powerOff_poweredOff)))
 (let (($x194 (ite logic_op_0_0_0 pred_val_0_0_associated_0_powerOff_poweredOff (ite logic_op_0_0_1 $x191 $x192))))
 (= logic_val_0_0_associated_0_powerOff_poweredOff $x194)))))
(assert
 (let ((?x107 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_associated_0)))
 (let ((?x199 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_powerOff sym_2_powerOff))))
 (= arith_val_0_0_associated_0_powerOff_poweredOff (bvadd ?x199 ?x107)))))
(assert
 (let ((?x113 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_associated_0)))
 (let ((?x214 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_powerOff sym_2_powerOff))))
 (= arith_val_0_1_associated_0_powerOff_poweredOff (bvadd ?x214 ?x113)))))
(assert
 (let ((?x217 (ite logic_val_0_0_associated_0_powerOff_poweredOff arith_val_0_0_associated_0_powerOff_poweredOff arith_val_0_1_associated_0_powerOff_poweredOff)))
 (= state_1_poweredOff_0 ?x217)))
(assert
 (let ((?x61 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x209 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_initialize sym_2_initialize))))
 (let ((?x211 (bvadd (bvadd ?x209 ?x61) pred_const_0_0)))
 (let (($x220 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x211 (_ bv0 8)) (bvsge ?x211 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x211 (_ bv0 8)) (and (distinct ?x211 (_ bv0 8)) true)))))
 (= pred_val_0_0_associated_0_initialize_error $x220))))))
(assert
 (let ((?x78 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x222 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_initialize sym_2_initialize))))
 (let ((?x224 (bvadd (bvadd ?x222 ?x78) pred_const_0_1)))
 (let (($x231 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x224 (_ bv0 8)) (bvsge ?x224 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x224 (_ bv0 8)) (and (distinct ?x224 (_ bv0 8)) true)))))
 (= pred_val_0_1_associated_0_initialize_error $x231))))))
(assert
 (let (($x236 (or pred_val_0_0_associated_0_initialize_error pred_val_0_1_associated_0_initialize_error)))
 (let (($x235 (and pred_val_0_0_associated_0_initialize_error pred_val_0_1_associated_0_initialize_error)))
 (let (($x238 (ite logic_op_0_0_0 pred_val_0_0_associated_0_initialize_error (ite logic_op_0_0_1 $x235 $x236))))
 (= logic_val_0_0_associated_0_initialize_error $x238)))))
(assert
 (let ((?x107 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_associated_0)))
 (let ((?x243 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_initialize sym_2_initialize))))
 (= arith_val_0_0_associated_0_initialize_error (bvadd ?x243 ?x107)))))
(assert
 (let ((?x113 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_associated_0)))
 (let ((?x258 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_initialize sym_2_initialize))))
 (= arith_val_0_1_associated_0_initialize_error (bvadd ?x258 ?x113)))))
(assert
 (let ((?x261 (ite logic_val_0_0_associated_0_initialize_error arith_val_0_0_associated_0_initialize_error arith_val_0_1_associated_0_initialize_error)))
 (= state_1_error_0 ?x261)))
(assert
 (let ((?x61 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x253 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_wakeUp sym_2_wakeUp))))
 (let ((?x255 (bvadd (bvadd ?x253 ?x61) pred_const_0_0)))
 (let (($x264 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x255 (_ bv0 8)) (bvsge ?x255 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x255 (_ bv0 8)) (and (distinct ?x255 (_ bv0 8)) true)))))
 (= pred_val_0_0_associated_0_wakeUp_error $x264))))))
(assert
 (let ((?x78 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x266 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_wakeUp sym_2_wakeUp))))
 (let ((?x268 (bvadd (bvadd ?x266 ?x78) pred_const_0_1)))
 (let (($x275 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x268 (_ bv0 8)) (bvsge ?x268 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x268 (_ bv0 8)) (and (distinct ?x268 (_ bv0 8)) true)))))
 (= pred_val_0_1_associated_0_wakeUp_error $x275))))))
(assert
 (let (($x280 (or pred_val_0_0_associated_0_wakeUp_error pred_val_0_1_associated_0_wakeUp_error)))
 (let (($x279 (and pred_val_0_0_associated_0_wakeUp_error pred_val_0_1_associated_0_wakeUp_error)))
 (let (($x282 (ite logic_op_0_0_0 pred_val_0_0_associated_0_wakeUp_error (ite logic_op_0_0_1 $x279 $x280))))
 (= logic_val_0_0_associated_0_wakeUp_error $x282)))))
(assert
 (let ((?x107 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_associated_0)))
 (let ((?x287 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_wakeUp sym_2_wakeUp))))
 (= arith_val_0_0_associated_0_wakeUp_error (bvadd ?x287 ?x107)))))
(assert
 (let ((?x113 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_associated_0)))
 (let ((?x302 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_wakeUp sym_2_wakeUp))))
 (= arith_val_0_1_associated_0_wakeUp_error (bvadd ?x302 ?x113)))))
(assert
 (let ((?x305 (ite logic_val_0_0_associated_0_wakeUp_error arith_val_0_0_associated_0_wakeUp_error arith_val_0_1_associated_0_wakeUp_error)))
 (= state_1_error_0 ?x305)))
(assert
 (let ((?x61 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x297 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_sleep sym_2_sleep))))
 (let ((?x299 (bvadd (bvadd ?x297 ?x61) pred_const_0_0)))
 (let (($x308 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x299 (_ bv0 8)) (bvsge ?x299 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x299 (_ bv0 8)) (and (distinct ?x299 (_ bv0 8)) true)))))
 (= pred_val_0_0_associated_0_sleep_idle $x308))))))
(assert
 (let ((?x78 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_associated_0)))
 (let ((?x310 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_sleep sym_2_sleep))))
 (let ((?x312 (bvadd (bvadd ?x310 ?x78) pred_const_0_1)))
 (let (($x319 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x312 (_ bv0 8)) (bvsge ?x312 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x312 (_ bv0 8)) (and (distinct ?x312 (_ bv0 8)) true)))))
 (= pred_val_0_1_associated_0_sleep_idle $x319))))))
(assert
 (let (($x324 (or pred_val_0_0_associated_0_sleep_idle pred_val_0_1_associated_0_sleep_idle)))
 (let (($x323 (and pred_val_0_0_associated_0_sleep_idle pred_val_0_1_associated_0_sleep_idle)))
 (let (($x326 (ite logic_op_0_0_0 pred_val_0_0_associated_0_sleep_idle (ite logic_op_0_0_1 $x323 $x324))))
 (= logic_val_0_0_associated_0_sleep_idle $x326)))))
(assert
 (let ((?x107 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_associated_0)))
 (let ((?x331 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_sleep sym_2_sleep))))
 (= arith_val_0_0_associated_0_sleep_idle (bvadd ?x331 ?x107)))))
(assert
 (let ((?x113 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_associated_0)))
 (let ((?x346 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_sleep sym_2_sleep))))
 (= arith_val_0_1_associated_0_sleep_idle (bvadd ?x346 ?x113)))))
(assert
 (let ((?x349 (ite logic_val_0_0_associated_0_sleep_idle arith_val_0_0_associated_0_sleep_idle arith_val_0_1_associated_0_sleep_idle)))
 (= state_1_idle_0 ?x349)))
(assert
 (let ((?x340 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x59 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_roamOut sym_2_roamOut))))
 (let ((?x342 (bvadd (bvadd ?x59 ?x340) pred_const_0_0)))
 (let (($x351 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x342 (_ bv0 8)) (bvsge ?x342 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x342 (_ bv0 8)) (and (distinct ?x342 (_ bv0 8)) true)))))
 (= pred_val_0_0_roamedOut_0_roamOut_error $x351))))))
(assert
 (let ((?x352 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x76 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_roamOut sym_2_roamOut))))
 (let ((?x354 (bvadd (bvadd ?x76 ?x352) pred_const_0_1)))
 (let (($x361 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x354 (_ bv0 8)) (bvsge ?x354 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x354 (_ bv0 8)) (and (distinct ?x354 (_ bv0 8)) true)))))
 (= pred_val_0_1_roamedOut_0_roamOut_error $x361))))))
(assert
 (let (($x366 (or pred_val_0_0_roamedOut_0_roamOut_error pred_val_0_1_roamedOut_0_roamOut_error)))
 (let (($x365 (and pred_val_0_0_roamedOut_0_roamOut_error pred_val_0_1_roamedOut_0_roamOut_error)))
 (let (($x368 (ite logic_op_0_0_0 pred_val_0_0_roamedOut_0_roamOut_error (ite logic_op_0_0_1 $x365 $x366))))
 (= logic_val_0_0_roamedOut_0_roamOut_error $x368)))))
(assert
 (let ((?x372 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_roamedOut_0)))
 (let ((?x105 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_roamOut sym_2_roamOut))))
 (= arith_val_0_0_roamedOut_0_roamOut_error (bvadd ?x105 ?x372)))))
(assert
 (let ((?x376 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_roamedOut_0)))
 (let ((?x110 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_roamOut sym_2_roamOut))))
 (= arith_val_0_1_roamedOut_0_roamOut_error (bvadd ?x110 ?x376)))))
(assert
 (let ((?x389 (ite logic_val_0_0_roamedOut_0_roamOut_error arith_val_0_0_roamedOut_0_roamOut_error arith_val_0_1_roamedOut_0_roamOut_error)))
 (= state_1_error_0 ?x389)))
(assert
 (let ((?x340 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x121 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_roamIn sym_2_roamIn))))
 (let ((?x381 (bvadd (bvadd ?x121 ?x340) pred_const_0_0)))
 (let (($x390 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x381 (_ bv0 8)) (bvsge ?x381 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x381 (_ bv0 8)) (and (distinct ?x381 (_ bv0 8)) true)))))
 (= pred_val_0_0_roamedOut_0_roamIn_associated $x390))))))
(assert
 (let ((?x352 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x134 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_roamIn sym_2_roamIn))))
 (let ((?x392 (bvadd (bvadd ?x134 ?x352) pred_const_0_1)))
 (let (($x399 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x392 (_ bv0 8)) (bvsge ?x392 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x392 (_ bv0 8)) (and (distinct ?x392 (_ bv0 8)) true)))))
 (= pred_val_0_1_roamedOut_0_roamIn_associated $x399))))))
(assert
 (let (($x404 (or pred_val_0_0_roamedOut_0_roamIn_associated pred_val_0_1_roamedOut_0_roamIn_associated)))
 (let (($x403 (and pred_val_0_0_roamedOut_0_roamIn_associated pred_val_0_1_roamedOut_0_roamIn_associated)))
 (let (($x406 (ite logic_op_0_0_0 pred_val_0_0_roamedOut_0_roamIn_associated (ite logic_op_0_0_1 $x403 $x404))))
 (= logic_val_0_0_roamedOut_0_roamIn_associated $x406)))))
(assert
 (let ((?x372 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_roamedOut_0)))
 (let ((?x155 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_roamIn sym_2_roamIn))))
 (= arith_val_0_0_roamedOut_0_roamIn_associated (bvadd ?x155 ?x372)))))
(assert
 (let ((?x376 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_roamedOut_0)))
 (let ((?x170 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_roamIn sym_2_roamIn))))
 (= arith_val_0_1_roamedOut_0_roamIn_associated (bvadd ?x170 ?x376)))))
(assert
 (let ((?x425 (ite logic_val_0_0_roamedOut_0_roamIn_associated arith_val_0_0_roamedOut_0_roamIn_associated arith_val_0_1_roamedOut_0_roamIn_associated)))
 (= state_1_associated_0 ?x425)))
(assert
 (let ((?x340 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x165 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_powerOff sym_2_powerOff))))
 (let ((?x417 (bvadd (bvadd ?x165 ?x340) pred_const_0_0)))
 (let (($x426 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x417 (_ bv0 8)) (bvsge ?x417 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x417 (_ bv0 8)) (and (distinct ?x417 (_ bv0 8)) true)))))
 (= pred_val_0_0_roamedOut_0_powerOff_error $x426))))))
(assert
 (let ((?x352 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x178 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_powerOff sym_2_powerOff))))
 (let ((?x428 (bvadd (bvadd ?x178 ?x352) pred_const_0_1)))
 (let (($x435 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x428 (_ bv0 8)) (bvsge ?x428 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x428 (_ bv0 8)) (and (distinct ?x428 (_ bv0 8)) true)))))
 (= pred_val_0_1_roamedOut_0_powerOff_error $x435))))))
(assert
 (let (($x440 (or pred_val_0_0_roamedOut_0_powerOff_error pred_val_0_1_roamedOut_0_powerOff_error)))
 (let (($x439 (and pred_val_0_0_roamedOut_0_powerOff_error pred_val_0_1_roamedOut_0_powerOff_error)))
 (let (($x442 (ite logic_op_0_0_0 pred_val_0_0_roamedOut_0_powerOff_error (ite logic_op_0_0_1 $x439 $x440))))
 (= logic_val_0_0_roamedOut_0_powerOff_error $x442)))))
(assert
 (let ((?x372 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_roamedOut_0)))
 (let ((?x199 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_powerOff sym_2_powerOff))))
 (= arith_val_0_0_roamedOut_0_powerOff_error (bvadd ?x199 ?x372)))))
(assert
 (let ((?x376 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_roamedOut_0)))
 (let ((?x214 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_powerOff sym_2_powerOff))))
 (= arith_val_0_1_roamedOut_0_powerOff_error (bvadd ?x214 ?x376)))))
(assert
 (let ((?x461 (ite logic_val_0_0_roamedOut_0_powerOff_error arith_val_0_0_roamedOut_0_powerOff_error arith_val_0_1_roamedOut_0_powerOff_error)))
 (= state_1_error_0 ?x461)))
(assert
 (let ((?x340 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x209 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_initialize sym_2_initialize))))
 (let ((?x453 (bvadd (bvadd ?x209 ?x340) pred_const_0_0)))
 (let (($x462 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x453 (_ bv0 8)) (bvsge ?x453 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x453 (_ bv0 8)) (and (distinct ?x453 (_ bv0 8)) true)))))
 (= pred_val_0_0_roamedOut_0_initialize_error $x462))))))
(assert
 (let ((?x352 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x222 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_initialize sym_2_initialize))))
 (let ((?x464 (bvadd (bvadd ?x222 ?x352) pred_const_0_1)))
 (let (($x471 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x464 (_ bv0 8)) (bvsge ?x464 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x464 (_ bv0 8)) (and (distinct ?x464 (_ bv0 8)) true)))))
 (= pred_val_0_1_roamedOut_0_initialize_error $x471))))))
(assert
 (let (($x476 (or pred_val_0_0_roamedOut_0_initialize_error pred_val_0_1_roamedOut_0_initialize_error)))
 (let (($x475 (and pred_val_0_0_roamedOut_0_initialize_error pred_val_0_1_roamedOut_0_initialize_error)))
 (let (($x478 (ite logic_op_0_0_0 pred_val_0_0_roamedOut_0_initialize_error (ite logic_op_0_0_1 $x475 $x476))))
 (= logic_val_0_0_roamedOut_0_initialize_error $x478)))))
(assert
 (let ((?x372 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_roamedOut_0)))
 (let ((?x243 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_initialize sym_2_initialize))))
 (= arith_val_0_0_roamedOut_0_initialize_error (bvadd ?x243 ?x372)))))
(assert
 (let ((?x376 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_roamedOut_0)))
 (let ((?x258 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_initialize sym_2_initialize))))
 (= arith_val_0_1_roamedOut_0_initialize_error (bvadd ?x258 ?x376)))))
(assert
 (let ((?x497 (ite logic_val_0_0_roamedOut_0_initialize_error arith_val_0_0_roamedOut_0_initialize_error arith_val_0_1_roamedOut_0_initialize_error)))
 (= state_1_error_0 ?x497)))
(assert
 (let ((?x340 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x253 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_wakeUp sym_2_wakeUp))))
 (let ((?x489 (bvadd (bvadd ?x253 ?x340) pred_const_0_0)))
 (let (($x498 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x489 (_ bv0 8)) (bvsge ?x489 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x489 (_ bv0 8)) (and (distinct ?x489 (_ bv0 8)) true)))))
 (= pred_val_0_0_roamedOut_0_wakeUp_error $x498))))))
(assert
 (let ((?x352 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x266 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_wakeUp sym_2_wakeUp))))
 (let ((?x500 (bvadd (bvadd ?x266 ?x352) pred_const_0_1)))
 (let (($x507 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x500 (_ bv0 8)) (bvsge ?x500 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x500 (_ bv0 8)) (and (distinct ?x500 (_ bv0 8)) true)))))
 (= pred_val_0_1_roamedOut_0_wakeUp_error $x507))))))
(assert
 (let (($x512 (or pred_val_0_0_roamedOut_0_wakeUp_error pred_val_0_1_roamedOut_0_wakeUp_error)))
 (let (($x511 (and pred_val_0_0_roamedOut_0_wakeUp_error pred_val_0_1_roamedOut_0_wakeUp_error)))
 (let (($x514 (ite logic_op_0_0_0 pred_val_0_0_roamedOut_0_wakeUp_error (ite logic_op_0_0_1 $x511 $x512))))
 (= logic_val_0_0_roamedOut_0_wakeUp_error $x514)))))
(assert
 (let ((?x372 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_roamedOut_0)))
 (let ((?x287 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_wakeUp sym_2_wakeUp))))
 (= arith_val_0_0_roamedOut_0_wakeUp_error (bvadd ?x287 ?x372)))))
(assert
 (let ((?x376 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_roamedOut_0)))
 (let ((?x302 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_wakeUp sym_2_wakeUp))))
 (= arith_val_0_1_roamedOut_0_wakeUp_error (bvadd ?x302 ?x376)))))
(assert
 (let ((?x533 (ite logic_val_0_0_roamedOut_0_wakeUp_error arith_val_0_0_roamedOut_0_wakeUp_error arith_val_0_1_roamedOut_0_wakeUp_error)))
 (= state_1_error_0 ?x533)))
(assert
 (let ((?x340 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x297 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_sleep sym_2_sleep))))
 (let ((?x525 (bvadd (bvadd ?x297 ?x340) pred_const_0_0)))
 (let (($x534 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x525 (_ bv0 8)) (bvsge ?x525 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x525 (_ bv0 8)) (and (distinct ?x525 (_ bv0 8)) true)))))
 (= pred_val_0_0_roamedOut_0_sleep_error $x534))))))
(assert
 (let ((?x352 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_roamedOut_0)))
 (let ((?x310 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_sleep sym_2_sleep))))
 (let ((?x536 (bvadd (bvadd ?x310 ?x352) pred_const_0_1)))
 (let (($x543 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x536 (_ bv0 8)) (bvsge ?x536 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x536 (_ bv0 8)) (and (distinct ?x536 (_ bv0 8)) true)))))
 (= pred_val_0_1_roamedOut_0_sleep_error $x543))))))
(assert
 (let (($x548 (or pred_val_0_0_roamedOut_0_sleep_error pred_val_0_1_roamedOut_0_sleep_error)))
 (let (($x547 (and pred_val_0_0_roamedOut_0_sleep_error pred_val_0_1_roamedOut_0_sleep_error)))
 (let (($x550 (ite logic_op_0_0_0 pred_val_0_0_roamedOut_0_sleep_error (ite logic_op_0_0_1 $x547 $x548))))
 (= logic_val_0_0_roamedOut_0_sleep_error $x550)))))
(assert
 (let ((?x372 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_roamedOut_0)))
 (let ((?x331 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_sleep sym_2_sleep))))
 (= arith_val_0_0_roamedOut_0_sleep_error (bvadd ?x331 ?x372)))))
(assert
 (let ((?x376 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_roamedOut_0)))
 (let ((?x346 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_sleep sym_2_sleep))))
 (= arith_val_0_1_roamedOut_0_sleep_error (bvadd ?x346 ?x376)))))
(assert
 (let ((?x569 (ite logic_val_0_0_roamedOut_0_sleep_error arith_val_0_0_roamedOut_0_sleep_error arith_val_0_1_roamedOut_0_sleep_error)))
 (= state_1_error_0 ?x569)))
(assert
 (let ((?x560 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x59 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_roamOut sym_2_roamOut))))
 (let ((?x562 (bvadd (bvadd ?x59 ?x560) pred_const_0_0)))
 (let (($x571 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x562 (_ bv0 8)) (bvsge ?x562 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x562 (_ bv0 8)) (and (distinct ?x562 (_ bv0 8)) true)))))
 (= pred_val_0_0_poweredOff_0_roamOut_error $x571))))))
(assert
 (let ((?x572 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x76 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_roamOut sym_2_roamOut))))
 (let ((?x574 (bvadd (bvadd ?x76 ?x572) pred_const_0_1)))
 (let (($x581 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x574 (_ bv0 8)) (bvsge ?x574 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x574 (_ bv0 8)) (and (distinct ?x574 (_ bv0 8)) true)))))
 (= pred_val_0_1_poweredOff_0_roamOut_error $x581))))))
(assert
 (let (($x586 (or pred_val_0_0_poweredOff_0_roamOut_error pred_val_0_1_poweredOff_0_roamOut_error)))
 (let (($x585 (and pred_val_0_0_poweredOff_0_roamOut_error pred_val_0_1_poweredOff_0_roamOut_error)))
 (let (($x588 (ite logic_op_0_0_0 pred_val_0_0_poweredOff_0_roamOut_error (ite logic_op_0_0_1 $x585 $x586))))
 (= logic_val_0_0_poweredOff_0_roamOut_error $x588)))))
(assert
 (let ((?x592 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_poweredOff_0)))
 (let ((?x105 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_roamOut sym_2_roamOut))))
 (= arith_val_0_0_poweredOff_0_roamOut_error (bvadd ?x105 ?x592)))))
(assert
 (let ((?x596 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_poweredOff_0)))
 (let ((?x110 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_roamOut sym_2_roamOut))))
 (= arith_val_0_1_poweredOff_0_roamOut_error (bvadd ?x110 ?x596)))))
(assert
 (let ((?x609 (ite logic_val_0_0_poweredOff_0_roamOut_error arith_val_0_0_poweredOff_0_roamOut_error arith_val_0_1_poweredOff_0_roamOut_error)))
 (= state_1_error_0 ?x609)))
(assert
 (let ((?x560 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x121 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_roamIn sym_2_roamIn))))
 (let ((?x601 (bvadd (bvadd ?x121 ?x560) pred_const_0_0)))
 (let (($x610 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x601 (_ bv0 8)) (bvsge ?x601 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x601 (_ bv0 8)) (and (distinct ?x601 (_ bv0 8)) true)))))
 (= pred_val_0_0_poweredOff_0_roamIn_error $x610))))))
(assert
 (let ((?x572 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x134 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_roamIn sym_2_roamIn))))
 (let ((?x612 (bvadd (bvadd ?x134 ?x572) pred_const_0_1)))
 (let (($x619 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x612 (_ bv0 8)) (bvsge ?x612 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x612 (_ bv0 8)) (and (distinct ?x612 (_ bv0 8)) true)))))
 (= pred_val_0_1_poweredOff_0_roamIn_error $x619))))))
(assert
 (let (($x624 (or pred_val_0_0_poweredOff_0_roamIn_error pred_val_0_1_poweredOff_0_roamIn_error)))
 (let (($x623 (and pred_val_0_0_poweredOff_0_roamIn_error pred_val_0_1_poweredOff_0_roamIn_error)))
 (let (($x626 (ite logic_op_0_0_0 pred_val_0_0_poweredOff_0_roamIn_error (ite logic_op_0_0_1 $x623 $x624))))
 (= logic_val_0_0_poweredOff_0_roamIn_error $x626)))))
(assert
 (let ((?x592 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_poweredOff_0)))
 (let ((?x155 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_roamIn sym_2_roamIn))))
 (= arith_val_0_0_poweredOff_0_roamIn_error (bvadd ?x155 ?x592)))))
(assert
 (let ((?x596 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_poweredOff_0)))
 (let ((?x170 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_roamIn sym_2_roamIn))))
 (= arith_val_0_1_poweredOff_0_roamIn_error (bvadd ?x170 ?x596)))))
(assert
 (let ((?x645 (ite logic_val_0_0_poweredOff_0_roamIn_error arith_val_0_0_poweredOff_0_roamIn_error arith_val_0_1_poweredOff_0_roamIn_error)))
 (= state_1_error_0 ?x645)))
(assert
 (let ((?x560 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x165 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_powerOff sym_2_powerOff))))
 (let ((?x637 (bvadd (bvadd ?x165 ?x560) pred_const_0_0)))
 (let (($x646 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x637 (_ bv0 8)) (bvsge ?x637 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x637 (_ bv0 8)) (and (distinct ?x637 (_ bv0 8)) true)))))
 (= pred_val_0_0_poweredOff_0_powerOff_error $x646))))))
(assert
 (let ((?x572 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x178 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_powerOff sym_2_powerOff))))
 (let ((?x648 (bvadd (bvadd ?x178 ?x572) pred_const_0_1)))
 (let (($x655 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x648 (_ bv0 8)) (bvsge ?x648 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x648 (_ bv0 8)) (and (distinct ?x648 (_ bv0 8)) true)))))
 (= pred_val_0_1_poweredOff_0_powerOff_error $x655))))))
(assert
 (let (($x660 (or pred_val_0_0_poweredOff_0_powerOff_error pred_val_0_1_poweredOff_0_powerOff_error)))
 (let (($x659 (and pred_val_0_0_poweredOff_0_powerOff_error pred_val_0_1_poweredOff_0_powerOff_error)))
 (let (($x662 (ite logic_op_0_0_0 pred_val_0_0_poweredOff_0_powerOff_error (ite logic_op_0_0_1 $x659 $x660))))
 (= logic_val_0_0_poweredOff_0_powerOff_error $x662)))))
(assert
 (let ((?x592 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_poweredOff_0)))
 (let ((?x199 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_powerOff sym_2_powerOff))))
 (= arith_val_0_0_poweredOff_0_powerOff_error (bvadd ?x199 ?x592)))))
(assert
 (let ((?x596 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_poweredOff_0)))
 (let ((?x214 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_powerOff sym_2_powerOff))))
 (= arith_val_0_1_poweredOff_0_powerOff_error (bvadd ?x214 ?x596)))))
(assert
 (let ((?x681 (ite logic_val_0_0_poweredOff_0_powerOff_error arith_val_0_0_poweredOff_0_powerOff_error arith_val_0_1_poweredOff_0_powerOff_error)))
 (= state_1_error_0 ?x681)))
(assert
 (let ((?x560 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x209 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_initialize sym_2_initialize))))
 (let ((?x673 (bvadd (bvadd ?x209 ?x560) pred_const_0_0)))
 (let (($x682 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x673 (_ bv0 8)) (bvsge ?x673 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x673 (_ bv0 8)) (and (distinct ?x673 (_ bv0 8)) true)))))
 (= pred_val_0_0_poweredOff_0_initialize_associated $x682))))))
(assert
 (let ((?x572 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x222 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_initialize sym_2_initialize))))
 (let ((?x684 (bvadd (bvadd ?x222 ?x572) pred_const_0_1)))
 (let (($x691 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x684 (_ bv0 8)) (bvsge ?x684 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x684 (_ bv0 8)) (and (distinct ?x684 (_ bv0 8)) true)))))
 (= pred_val_0_1_poweredOff_0_initialize_associated $x691))))))
(assert
 (let (($x696 (or pred_val_0_0_poweredOff_0_initialize_associated pred_val_0_1_poweredOff_0_initialize_associated)))
 (let (($x695 (and pred_val_0_0_poweredOff_0_initialize_associated pred_val_0_1_poweredOff_0_initialize_associated)))
 (let (($x698 (ite logic_op_0_0_0 pred_val_0_0_poweredOff_0_initialize_associated (ite logic_op_0_0_1 $x695 $x696))))
 (= logic_val_0_0_poweredOff_0_initialize_associated $x698)))))
(assert
 (let ((?x592 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_poweredOff_0)))
 (let ((?x243 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_initialize sym_2_initialize))))
 (= arith_val_0_0_poweredOff_0_initialize_associated (bvadd ?x243 ?x592)))))
(assert
 (let ((?x596 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_poweredOff_0)))
 (let ((?x258 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_initialize sym_2_initialize))))
 (= arith_val_0_1_poweredOff_0_initialize_associated (bvadd ?x258 ?x596)))))
(assert
 (let ((?x717 (ite logic_val_0_0_poweredOff_0_initialize_associated arith_val_0_0_poweredOff_0_initialize_associated arith_val_0_1_poweredOff_0_initialize_associated)))
 (= state_1_associated_0 ?x717)))
(assert
 (let ((?x560 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x253 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_wakeUp sym_2_wakeUp))))
 (let ((?x709 (bvadd (bvadd ?x253 ?x560) pred_const_0_0)))
 (let (($x718 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x709 (_ bv0 8)) (bvsge ?x709 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x709 (_ bv0 8)) (and (distinct ?x709 (_ bv0 8)) true)))))
 (= pred_val_0_0_poweredOff_0_wakeUp_error $x718))))))
(assert
 (let ((?x572 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x266 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_wakeUp sym_2_wakeUp))))
 (let ((?x720 (bvadd (bvadd ?x266 ?x572) pred_const_0_1)))
 (let (($x727 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x720 (_ bv0 8)) (bvsge ?x720 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x720 (_ bv0 8)) (and (distinct ?x720 (_ bv0 8)) true)))))
 (= pred_val_0_1_poweredOff_0_wakeUp_error $x727))))))
(assert
 (let (($x732 (or pred_val_0_0_poweredOff_0_wakeUp_error pred_val_0_1_poweredOff_0_wakeUp_error)))
 (let (($x731 (and pred_val_0_0_poweredOff_0_wakeUp_error pred_val_0_1_poweredOff_0_wakeUp_error)))
 (let (($x734 (ite logic_op_0_0_0 pred_val_0_0_poweredOff_0_wakeUp_error (ite logic_op_0_0_1 $x731 $x732))))
 (= logic_val_0_0_poweredOff_0_wakeUp_error $x734)))))
(assert
 (let ((?x592 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_poweredOff_0)))
 (let ((?x287 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_wakeUp sym_2_wakeUp))))
 (= arith_val_0_0_poweredOff_0_wakeUp_error (bvadd ?x287 ?x592)))))
(assert
 (let ((?x596 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_poweredOff_0)))
 (let ((?x302 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_wakeUp sym_2_wakeUp))))
 (= arith_val_0_1_poweredOff_0_wakeUp_error (bvadd ?x302 ?x596)))))
(assert
 (let ((?x753 (ite logic_val_0_0_poweredOff_0_wakeUp_error arith_val_0_0_poweredOff_0_wakeUp_error arith_val_0_1_poweredOff_0_wakeUp_error)))
 (= state_1_error_0 ?x753)))
(assert
 (let ((?x560 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x297 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_sleep sym_2_sleep))))
 (let ((?x745 (bvadd (bvadd ?x297 ?x560) pred_const_0_0)))
 (let (($x754 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x745 (_ bv0 8)) (bvsge ?x745 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x745 (_ bv0 8)) (and (distinct ?x745 (_ bv0 8)) true)))))
 (= pred_val_0_0_poweredOff_0_sleep_error $x754))))))
(assert
 (let ((?x572 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_poweredOff_0)))
 (let ((?x310 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_sleep sym_2_sleep))))
 (let ((?x756 (bvadd (bvadd ?x310 ?x572) pred_const_0_1)))
 (let (($x763 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x756 (_ bv0 8)) (bvsge ?x756 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x756 (_ bv0 8)) (and (distinct ?x756 (_ bv0 8)) true)))))
 (= pred_val_0_1_poweredOff_0_sleep_error $x763))))))
(assert
 (let (($x768 (or pred_val_0_0_poweredOff_0_sleep_error pred_val_0_1_poweredOff_0_sleep_error)))
 (let (($x767 (and pred_val_0_0_poweredOff_0_sleep_error pred_val_0_1_poweredOff_0_sleep_error)))
 (let (($x770 (ite logic_op_0_0_0 pred_val_0_0_poweredOff_0_sleep_error (ite logic_op_0_0_1 $x767 $x768))))
 (= logic_val_0_0_poweredOff_0_sleep_error $x770)))))
(assert
 (let ((?x592 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_poweredOff_0)))
 (let ((?x331 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_sleep sym_2_sleep))))
 (= arith_val_0_0_poweredOff_0_sleep_error (bvadd ?x331 ?x592)))))
(assert
 (let ((?x596 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_poweredOff_0)))
 (let ((?x346 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_sleep sym_2_sleep))))
 (= arith_val_0_1_poweredOff_0_sleep_error (bvadd ?x346 ?x596)))))
(assert
 (let ((?x789 (ite logic_val_0_0_poweredOff_0_sleep_error arith_val_0_0_poweredOff_0_sleep_error arith_val_0_1_poweredOff_0_sleep_error)))
 (= state_1_error_0 ?x789)))
(assert
 (let ((?x780 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x59 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_roamOut sym_2_roamOut))))
 (let ((?x782 (bvadd (bvadd ?x59 ?x780) pred_const_0_0)))
 (let (($x791 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x782 (_ bv0 8)) (bvsge ?x782 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x782 (_ bv0 8)) (and (distinct ?x782 (_ bv0 8)) true)))))
 (= pred_val_0_0_idle_0_roamOut_error $x791))))))
(assert
 (let ((?x792 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x76 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_roamOut sym_2_roamOut))))
 (let ((?x794 (bvadd (bvadd ?x76 ?x792) pred_const_0_1)))
 (let (($x801 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x794 (_ bv0 8)) (bvsge ?x794 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x794 (_ bv0 8)) (and (distinct ?x794 (_ bv0 8)) true)))))
 (= pred_val_0_1_idle_0_roamOut_error $x801))))))
(assert
 (let (($x807 (ite logic_op_0_0_1 (and pred_val_0_0_idle_0_roamOut_error pred_val_0_1_idle_0_roamOut_error) (or pred_val_0_0_idle_0_roamOut_error pred_val_0_1_idle_0_roamOut_error))))
 (= logic_val_0_0_idle_0_roamOut_error (ite logic_op_0_0_0 pred_val_0_0_idle_0_roamOut_error $x807))))
(assert
 (let ((?x812 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_idle_0)))
 (let ((?x105 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_roamOut sym_2_roamOut))))
 (= arith_val_0_0_idle_0_roamOut_error (bvadd ?x105 ?x812)))))
(assert
 (let ((?x816 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_idle_0)))
 (let ((?x110 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_roamOut sym_2_roamOut))))
 (= arith_val_0_1_idle_0_roamOut_error (bvadd ?x110 ?x816)))))
(assert
 (let ((?x829 (ite logic_val_0_0_idle_0_roamOut_error arith_val_0_0_idle_0_roamOut_error arith_val_0_1_idle_0_roamOut_error)))
 (= state_1_error_0 ?x829)))
(assert
 (let ((?x780 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x121 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_roamIn sym_2_roamIn))))
 (let ((?x821 (bvadd (bvadd ?x121 ?x780) pred_const_0_0)))
 (let (($x830 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x821 (_ bv0 8)) (bvsge ?x821 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x821 (_ bv0 8)) (and (distinct ?x821 (_ bv0 8)) true)))))
 (= pred_val_0_0_idle_0_roamIn_error $x830))))))
(assert
 (let ((?x792 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x134 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_roamIn sym_2_roamIn))))
 (let ((?x832 (bvadd (bvadd ?x134 ?x792) pred_const_0_1)))
 (let (($x839 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x832 (_ bv0 8)) (bvsge ?x832 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x832 (_ bv0 8)) (and (distinct ?x832 (_ bv0 8)) true)))))
 (= pred_val_0_1_idle_0_roamIn_error $x839))))))
(assert
 (let (($x845 (ite logic_op_0_0_1 (and pred_val_0_0_idle_0_roamIn_error pred_val_0_1_idle_0_roamIn_error) (or pred_val_0_0_idle_0_roamIn_error pred_val_0_1_idle_0_roamIn_error))))
 (= logic_val_0_0_idle_0_roamIn_error (ite logic_op_0_0_0 pred_val_0_0_idle_0_roamIn_error $x845))))
(assert
 (let ((?x812 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_idle_0)))
 (let ((?x155 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_roamIn sym_2_roamIn))))
 (= arith_val_0_0_idle_0_roamIn_error (bvadd ?x155 ?x812)))))
(assert
 (let ((?x816 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_idle_0)))
 (let ((?x170 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_roamIn sym_2_roamIn))))
 (= arith_val_0_1_idle_0_roamIn_error (bvadd ?x170 ?x816)))))
(assert
 (let ((?x865 (ite logic_val_0_0_idle_0_roamIn_error arith_val_0_0_idle_0_roamIn_error arith_val_0_1_idle_0_roamIn_error)))
 (= state_1_error_0 ?x865)))
(assert
 (let ((?x780 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x165 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_powerOff sym_2_powerOff))))
 (let ((?x857 (bvadd (bvadd ?x165 ?x780) pred_const_0_0)))
 (let (($x866 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x857 (_ bv0 8)) (bvsge ?x857 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x857 (_ bv0 8)) (and (distinct ?x857 (_ bv0 8)) true)))))
 (= pred_val_0_0_idle_0_powerOff_error $x866))))))
(assert
 (let ((?x792 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x178 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_powerOff sym_2_powerOff))))
 (let ((?x868 (bvadd (bvadd ?x178 ?x792) pred_const_0_1)))
 (let (($x875 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x868 (_ bv0 8)) (bvsge ?x868 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x868 (_ bv0 8)) (and (distinct ?x868 (_ bv0 8)) true)))))
 (= pred_val_0_1_idle_0_powerOff_error $x875))))))
(assert
 (let (($x880 (or pred_val_0_0_idle_0_powerOff_error pred_val_0_1_idle_0_powerOff_error)))
 (let (($x879 (and pred_val_0_0_idle_0_powerOff_error pred_val_0_1_idle_0_powerOff_error)))
 (let (($x882 (ite logic_op_0_0_0 pred_val_0_0_idle_0_powerOff_error (ite logic_op_0_0_1 $x879 $x880))))
 (= logic_val_0_0_idle_0_powerOff_error $x882)))))
(assert
 (let ((?x812 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_idle_0)))
 (let ((?x199 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_powerOff sym_2_powerOff))))
 (= arith_val_0_0_idle_0_powerOff_error (bvadd ?x199 ?x812)))))
(assert
 (let ((?x816 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_idle_0)))
 (let ((?x214 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_powerOff sym_2_powerOff))))
 (= arith_val_0_1_idle_0_powerOff_error (bvadd ?x214 ?x816)))))
(assert
 (let ((?x901 (ite logic_val_0_0_idle_0_powerOff_error arith_val_0_0_idle_0_powerOff_error arith_val_0_1_idle_0_powerOff_error)))
 (= state_1_error_0 ?x901)))
(assert
 (let ((?x780 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x209 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_initialize sym_2_initialize))))
 (let ((?x893 (bvadd (bvadd ?x209 ?x780) pred_const_0_0)))
 (let (($x902 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x893 (_ bv0 8)) (bvsge ?x893 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x893 (_ bv0 8)) (and (distinct ?x893 (_ bv0 8)) true)))))
 (= pred_val_0_0_idle_0_initialize_error $x902))))))
(assert
 (let ((?x792 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x222 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_initialize sym_2_initialize))))
 (let ((?x904 (bvadd (bvadd ?x222 ?x792) pred_const_0_1)))
 (let (($x911 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x904 (_ bv0 8)) (bvsge ?x904 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x904 (_ bv0 8)) (and (distinct ?x904 (_ bv0 8)) true)))))
 (= pred_val_0_1_idle_0_initialize_error $x911))))))
(assert
 (let (($x916 (or pred_val_0_0_idle_0_initialize_error pred_val_0_1_idle_0_initialize_error)))
 (let (($x915 (and pred_val_0_0_idle_0_initialize_error pred_val_0_1_idle_0_initialize_error)))
 (let (($x918 (ite logic_op_0_0_0 pred_val_0_0_idle_0_initialize_error (ite logic_op_0_0_1 $x915 $x916))))
 (= logic_val_0_0_idle_0_initialize_error $x918)))))
(assert
 (let ((?x812 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_idle_0)))
 (let ((?x243 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_initialize sym_2_initialize))))
 (= arith_val_0_0_idle_0_initialize_error (bvadd ?x243 ?x812)))))
(assert
 (let ((?x816 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_idle_0)))
 (let ((?x258 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_initialize sym_2_initialize))))
 (= arith_val_0_1_idle_0_initialize_error (bvadd ?x258 ?x816)))))
(assert
 (let ((?x937 (ite logic_val_0_0_idle_0_initialize_error arith_val_0_0_idle_0_initialize_error arith_val_0_1_idle_0_initialize_error)))
 (= state_1_error_0 ?x937)))
(assert
 (let ((?x780 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x253 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_wakeUp sym_2_wakeUp))))
 (let ((?x929 (bvadd (bvadd ?x253 ?x780) pred_const_0_0)))
 (let (($x938 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x929 (_ bv0 8)) (bvsge ?x929 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x929 (_ bv0 8)) (and (distinct ?x929 (_ bv0 8)) true)))))
 (= pred_val_0_0_idle_0_wakeUp_associated $x938))))))
(assert
 (let ((?x792 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x266 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_wakeUp sym_2_wakeUp))))
 (let ((?x940 (bvadd (bvadd ?x266 ?x792) pred_const_0_1)))
 (let (($x947 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x940 (_ bv0 8)) (bvsge ?x940 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x940 (_ bv0 8)) (and (distinct ?x940 (_ bv0 8)) true)))))
 (= pred_val_0_1_idle_0_wakeUp_associated $x947))))))
(assert
 (let (($x952 (or pred_val_0_0_idle_0_wakeUp_associated pred_val_0_1_idle_0_wakeUp_associated)))
 (let (($x951 (and pred_val_0_0_idle_0_wakeUp_associated pred_val_0_1_idle_0_wakeUp_associated)))
 (let (($x954 (ite logic_op_0_0_0 pred_val_0_0_idle_0_wakeUp_associated (ite logic_op_0_0_1 $x951 $x952))))
 (= logic_val_0_0_idle_0_wakeUp_associated $x954)))))
(assert
 (let ((?x812 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_idle_0)))
 (let ((?x287 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_wakeUp sym_2_wakeUp))))
 (= arith_val_0_0_idle_0_wakeUp_associated (bvadd ?x287 ?x812)))))
(assert
 (let ((?x816 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_idle_0)))
 (let ((?x302 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_wakeUp sym_2_wakeUp))))
 (= arith_val_0_1_idle_0_wakeUp_associated (bvadd ?x302 ?x816)))))
(assert
 (let ((?x973 (ite logic_val_0_0_idle_0_wakeUp_associated arith_val_0_0_idle_0_wakeUp_associated arith_val_0_1_idle_0_wakeUp_associated)))
 (= state_1_associated_0 ?x973)))
(assert
 (let ((?x780 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x297 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_sleep sym_2_sleep))))
 (let ((?x965 (bvadd (bvadd ?x297 ?x780) pred_const_0_0)))
 (let (($x974 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x965 (_ bv0 8)) (bvsge ?x965 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x965 (_ bv0 8)) (and (distinct ?x965 (_ bv0 8)) true)))))
 (= pred_val_0_0_idle_0_sleep_error $x974))))))
(assert
 (let ((?x792 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_idle_0)))
 (let ((?x310 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_sleep sym_2_sleep))))
 (let ((?x976 (bvadd (bvadd ?x310 ?x792) pred_const_0_1)))
 (let (($x983 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x976 (_ bv0 8)) (bvsge ?x976 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x976 (_ bv0 8)) (and (distinct ?x976 (_ bv0 8)) true)))))
 (= pred_val_0_1_idle_0_sleep_error $x983))))))
(assert
 (let (($x989 (ite logic_op_0_0_1 (and pred_val_0_0_idle_0_sleep_error pred_val_0_1_idle_0_sleep_error) (or pred_val_0_0_idle_0_sleep_error pred_val_0_1_idle_0_sleep_error))))
 (= logic_val_0_0_idle_0_sleep_error (ite logic_op_0_0_0 pred_val_0_0_idle_0_sleep_error $x989))))
(assert
 (let ((?x812 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_idle_0)))
 (let ((?x331 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_sleep sym_2_sleep))))
 (= arith_val_0_0_idle_0_sleep_error (bvadd ?x331 ?x812)))))
(assert
 (let ((?x816 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_idle_0)))
 (let ((?x346 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_sleep sym_2_sleep))))
 (= arith_val_0_1_idle_0_sleep_error (bvadd ?x346 ?x816)))))
(assert
 (let ((?x1009 (ite logic_val_0_0_idle_0_sleep_error arith_val_0_0_idle_0_sleep_error arith_val_0_1_idle_0_sleep_error)))
 (= state_1_error_0 ?x1009)))
(assert
 (let ((?x1000 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_error_0)))
 (let ((?x59 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_roamOut sym_2_roamOut))))
 (let ((?x1002 (bvadd (bvadd ?x59 ?x1000) pred_const_0_0)))
 (let (($x1011 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x1002 (_ bv0 8)) (bvsge ?x1002 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x1002 (_ bv0 8)) (and (distinct ?x1002 (_ bv0 8)) true)))))
 (= pred_val_0_0_error_0_roamOut_error $x1011))))))
(assert
 (let ((?x1012 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_error_0)))
 (let ((?x76 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_roamOut sym_2_roamOut))))
 (let ((?x1014 (bvadd (bvadd ?x76 ?x1012) pred_const_0_1)))
 (let (($x1021 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x1014 (_ bv0 8)) (bvsge ?x1014 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x1014 (_ bv0 8)) (and (distinct ?x1014 (_ bv0 8)) true)))))
 (= pred_val_0_1_error_0_roamOut_error $x1021))))))
(assert
 (let (($x1026 (or pred_val_0_0_error_0_roamOut_error pred_val_0_1_error_0_roamOut_error)))
 (let (($x1025 (and pred_val_0_0_error_0_roamOut_error pred_val_0_1_error_0_roamOut_error)))
 (let (($x1028 (ite logic_op_0_0_0 pred_val_0_0_error_0_roamOut_error (ite logic_op_0_0_1 $x1025 $x1026))))
 (= logic_val_0_0_error_0_roamOut_error $x1028)))))
(assert
 (let ((?x1032 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_error_0)))
 (let ((?x105 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_roamOut sym_2_roamOut))))
 (= arith_val_0_0_error_0_roamOut_error (bvadd ?x105 ?x1032)))))
(assert
 (let ((?x1036 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_error_0)))
 (let ((?x110 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_roamOut sym_2_roamOut))))
 (= arith_val_0_1_error_0_roamOut_error (bvadd ?x110 ?x1036)))))
(assert
 (let ((?x1049 (ite logic_val_0_0_error_0_roamOut_error arith_val_0_0_error_0_roamOut_error arith_val_0_1_error_0_roamOut_error)))
 (= state_1_error_0 ?x1049)))
(assert
 (let ((?x1000 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_error_0)))
 (let ((?x121 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_roamIn sym_2_roamIn))))
 (let ((?x1041 (bvadd (bvadd ?x121 ?x1000) pred_const_0_0)))
 (let (($x1050 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x1041 (_ bv0 8)) (bvsge ?x1041 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x1041 (_ bv0 8)) (and (distinct ?x1041 (_ bv0 8)) true)))))
 (= pred_val_0_0_error_0_roamIn_error $x1050))))))
(assert
 (let ((?x1012 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_error_0)))
 (let ((?x134 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_roamIn sym_2_roamIn))))
 (let ((?x1052 (bvadd (bvadd ?x134 ?x1012) pred_const_0_1)))
 (let (($x1059 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x1052 (_ bv0 8)) (bvsge ?x1052 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x1052 (_ bv0 8)) (and (distinct ?x1052 (_ bv0 8)) true)))))
 (= pred_val_0_1_error_0_roamIn_error $x1059))))))
(assert
 (let (($x1065 (ite logic_op_0_0_1 (and pred_val_0_0_error_0_roamIn_error pred_val_0_1_error_0_roamIn_error) (or pred_val_0_0_error_0_roamIn_error pred_val_0_1_error_0_roamIn_error))))
 (= logic_val_0_0_error_0_roamIn_error (ite logic_op_0_0_0 pred_val_0_0_error_0_roamIn_error $x1065))))
(assert
 (let ((?x1032 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_error_0)))
 (let ((?x155 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_roamIn sym_2_roamIn))))
 (= arith_val_0_0_error_0_roamIn_error (bvadd ?x155 ?x1032)))))
(assert
 (let ((?x1036 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_error_0)))
 (let ((?x170 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_roamIn sym_2_roamIn))))
 (= arith_val_0_1_error_0_roamIn_error (bvadd ?x170 ?x1036)))))
(assert
 (let ((?x1085 (ite logic_val_0_0_error_0_roamIn_error arith_val_0_0_error_0_roamIn_error arith_val_0_1_error_0_roamIn_error)))
 (= state_1_error_0 ?x1085)))
(assert
 (let ((?x1000 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_error_0)))
 (let ((?x165 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_powerOff sym_2_powerOff))))
 (let ((?x1077 (bvadd (bvadd ?x165 ?x1000) pred_const_0_0)))
 (let (($x1086 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x1077 (_ bv0 8)) (bvsge ?x1077 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x1077 (_ bv0 8)) (and (distinct ?x1077 (_ bv0 8)) true)))))
 (= pred_val_0_0_error_0_powerOff_error $x1086))))))
(assert
 (let ((?x1012 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_error_0)))
 (let ((?x178 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_powerOff sym_2_powerOff))))
 (let ((?x1088 (bvadd (bvadd ?x178 ?x1012) pred_const_0_1)))
 (let (($x1095 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x1088 (_ bv0 8)) (bvsge ?x1088 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x1088 (_ bv0 8)) (and (distinct ?x1088 (_ bv0 8)) true)))))
 (= pred_val_0_1_error_0_powerOff_error $x1095))))))
(assert
 (let (($x1100 (or pred_val_0_0_error_0_powerOff_error pred_val_0_1_error_0_powerOff_error)))
 (let (($x1099 (and pred_val_0_0_error_0_powerOff_error pred_val_0_1_error_0_powerOff_error)))
 (let (($x1102 (ite logic_op_0_0_0 pred_val_0_0_error_0_powerOff_error (ite logic_op_0_0_1 $x1099 $x1100))))
 (= logic_val_0_0_error_0_powerOff_error $x1102)))))
(assert
 (let ((?x1032 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_error_0)))
 (let ((?x199 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_powerOff sym_2_powerOff))))
 (= arith_val_0_0_error_0_powerOff_error (bvadd ?x199 ?x1032)))))
(assert
 (let ((?x1036 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_error_0)))
 (let ((?x214 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_powerOff sym_2_powerOff))))
 (= arith_val_0_1_error_0_powerOff_error (bvadd ?x214 ?x1036)))))
(assert
 (let ((?x1121 (ite logic_val_0_0_error_0_powerOff_error arith_val_0_0_error_0_powerOff_error arith_val_0_1_error_0_powerOff_error)))
 (= state_1_error_0 ?x1121)))
(assert
 (let ((?x1000 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_error_0)))
 (let ((?x209 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_initialize sym_2_initialize))))
 (let ((?x1113 (bvadd (bvadd ?x209 ?x1000) pred_const_0_0)))
 (let (($x1122 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x1113 (_ bv0 8)) (bvsge ?x1113 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x1113 (_ bv0 8)) (and (distinct ?x1113 (_ bv0 8)) true)))))
 (= pred_val_0_0_error_0_initialize_associated $x1122))))))
(assert
 (let ((?x1012 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_error_0)))
 (let ((?x222 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_initialize sym_2_initialize))))
 (let ((?x1124 (bvadd (bvadd ?x222 ?x1012) pred_const_0_1)))
 (let (($x1131 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x1124 (_ bv0 8)) (bvsge ?x1124 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x1124 (_ bv0 8)) (and (distinct ?x1124 (_ bv0 8)) true)))))
 (= pred_val_0_1_error_0_initialize_associated $x1131))))))
(assert
 (let (($x1136 (or pred_val_0_0_error_0_initialize_associated pred_val_0_1_error_0_initialize_associated)))
 (let (($x1135 (and pred_val_0_0_error_0_initialize_associated pred_val_0_1_error_0_initialize_associated)))
 (let (($x1138 (ite logic_op_0_0_0 pred_val_0_0_error_0_initialize_associated (ite logic_op_0_0_1 $x1135 $x1136))))
 (= logic_val_0_0_error_0_initialize_associated $x1138)))))
(assert
 (let ((?x1032 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_error_0)))
 (let ((?x243 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_initialize sym_2_initialize))))
 (= arith_val_0_0_error_0_initialize_associated (bvadd ?x243 ?x1032)))))
(assert
 (let ((?x1036 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_error_0)))
 (let ((?x258 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_initialize sym_2_initialize))))
 (= arith_val_0_1_error_0_initialize_associated (bvadd ?x258 ?x1036)))))
(assert
 (let ((?x1157 (ite logic_val_0_0_error_0_initialize_associated arith_val_0_0_error_0_initialize_associated arith_val_0_1_error_0_initialize_associated)))
 (= state_1_associated_0 ?x1157)))
(assert
 (let ((?x1000 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_error_0)))
 (let ((?x253 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_wakeUp sym_2_wakeUp))))
 (let ((?x1149 (bvadd (bvadd ?x253 ?x1000) pred_const_0_0)))
 (let (($x1158 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x1149 (_ bv0 8)) (bvsge ?x1149 (_ bv0 8))) (ite pred_op_0_0_1 (bvsle ?x1149 (_ bv0 8)) (and (distinct ?x1149 (_ bv0 8)) true)))))
 (= pred_val_0_0_error_0_wakeUp_error $x1158))))))
(assert
 (let ((?x1012 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_error_0)))
 (let ((?x266 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_wakeUp sym_2_wakeUp))))
 (let ((?x1160 (bvadd (bvadd ?x266 ?x1012) pred_const_0_1)))
 (let (($x1167 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x1160 (_ bv0 8)) (bvsge ?x1160 (_ bv0 8))) (ite pred_op_0_1_1 (bvsle ?x1160 (_ bv0 8)) (and (distinct ?x1160 (_ bv0 8)) true)))))
 (= pred_val_0_1_error_0_wakeUp_error $x1167))))))
(assert
 (let (($x1173 (ite logic_op_0_0_1 (and pred_val_0_0_error_0_wakeUp_error pred_val_0_1_error_0_wakeUp_error) (or pred_val_0_0_error_0_wakeUp_error pred_val_0_1_error_0_wakeUp_error))))
 (= logic_val_0_0_error_0_wakeUp_error (ite logic_op_0_0_0 pred_val_0_0_error_0_wakeUp_error $x1173))))
(assert
 (let ((?x1032 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_error_0)))
 (let ((?x287 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_wakeUp sym_2_wakeUp))))
 (= arith_val_0_0_error_0_wakeUp_error (bvadd ?x287 ?x1032)))))
(assert
 (let ((?x1036 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_error_0)))
 (let ((?x302 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_wakeUp sym_2_wakeUp))))
 (= arith_val_0_1_error_0_wakeUp_error (bvadd ?x302 ?x1036)))))
(assert
 (let ((?x1193 (ite logic_val_0_0_error_0_wakeUp_error arith_val_0_0_error_0_wakeUp_error arith_val_0_1_error_0_wakeUp_error)))
 (= state_1_error_0 ?x1193)))
(assert
 (let ((?x1000 (ite pred_state_opt_0_0_0 (_ bv0 8) state_1_error_0)))
 (let ((?x297 (ite pred_sym_opt_0_0_0 (_ bv0 8) (ite pred_sym_opt_0_0_1 sym_1_sleep sym_2_sleep))))
 (let ((?x1185 (bvadd (bvadd ?x297 ?x1000) pred_const_0_0)))
 (let (($x1189 (and (distinct ?x1185 (_ bv0 8)) true)))
 (let (($x1188 (bvsle ?x1185 (_ bv0 8))))
 (let (($x1194 (ite pred_op_0_0_0 (ite pred_op_0_0_1 (= ?x1185 (_ bv0 8)) (bvsge ?x1185 (_ bv0 8))) (ite pred_op_0_0_1 $x1188 $x1189))))
 (= pred_val_0_0_error_0_sleep_error $x1194))))))))
(assert
 (let ((?x1012 (ite pred_state_opt_0_1_0 (_ bv0 8) state_1_error_0)))
 (let ((?x310 (ite pred_sym_opt_0_1_0 (_ bv0 8) (ite pred_sym_opt_0_1_1 sym_1_sleep sym_2_sleep))))
 (let ((?x1196 (bvadd (bvadd ?x310 ?x1012) pred_const_0_1)))
 (let (($x1200 (and (distinct ?x1196 (_ bv0 8)) true)))
 (let (($x1199 (bvsle ?x1196 (_ bv0 8))))
 (let (($x1203 (ite pred_op_0_1_0 (ite pred_op_0_1_1 (= ?x1196 (_ bv0 8)) (bvsge ?x1196 (_ bv0 8))) (ite pred_op_0_1_1 $x1199 $x1200))))
 (= pred_val_0_1_error_0_sleep_error $x1203))))))))
(assert
 (let (($x1208 (or pred_val_0_0_error_0_sleep_error pred_val_0_1_error_0_sleep_error)))
 (let (($x1207 (and pred_val_0_0_error_0_sleep_error pred_val_0_1_error_0_sleep_error)))
 (let (($x1210 (ite logic_op_0_0_0 pred_val_0_0_error_0_sleep_error (ite logic_op_0_0_1 $x1207 $x1208))))
 (= logic_val_0_0_error_0_sleep_error $x1210)))))
(assert
 (let ((?x1032 (ite arith_state_opt_0_0_0 arith_state_const_0_0 state_1_error_0)))
 (let ((?x331 (ite arith_sym_opt_0_0_0 arith_sym_const_0_0 (ite arith_sym_opt_0_0_1 sym_1_sleep sym_2_sleep))))
 (let ((?x1214 (bvadd ?x331 ?x1032)))
 (= arith_val_0_0_error_0_sleep_error ?x1214)))))
(assert
 (let ((?x1036 (ite arith_state_opt_0_1_0 arith_state_const_0_1 state_1_error_0)))
 (let ((?x346 (ite arith_sym_opt_0_1_0 arith_sym_const_0_1 (ite arith_sym_opt_0_1_1 sym_1_sleep sym_2_sleep))))
 (let ((?x1217 (bvadd ?x346 ?x1036)))
 (= arith_val_0_1_error_0_sleep_error ?x1217)))))
(assert
 (let ((?x1229 (ite logic_val_0_0_error_0_sleep_error arith_val_0_0_error_0_sleep_error arith_val_0_1_error_0_sleep_error)))
 (= state_1_error_0 ?x1229)))
(check-sat)
(exit)
